import streamlit as st
import yfinance as yf
import plotly.graph_objects as go
import pandas as pd

st.set_page_config(page_title="FUntech", layout="wide")

st.title("ğŸ“ˆ Hisse FiyatlarÄ±")

# Ã–rnek hisse listesi
tickers = ["ASELS.IS", "AKBNK.IS", "AAPL", "MSFT", "GOOGL", "AMZN", "TSLA"]
selected_tickers = st.multiselect("Hisse SeÃ§iniz", tickers, default=["ASELS.IS"])

# Tarih aralÄ±ÄŸÄ±
col1, col2 = st.columns(2)
start_date = col1.date_input("BaÅŸlangÄ±Ã§ Tarihi", value=pd.to_datetime("2023-01-01"))
end_date = col2.date_input("BitiÅŸ Tarihi", value=pd.to_datetime("today"))

# GeÃ§erli giriÅŸ kontrolÃ¼
if start_date >= end_date:
    st.error("BaÅŸlangÄ±Ã§ tarihi, bitiÅŸ tarihinden kÃ¼Ã§Ã¼k olmalÄ±.")
elif not selected_tickers:
    st.warning("LÃ¼tfen en az bir hisse seÃ§iniz.")
else:
    fig = go.Figure()
    for ticker in selected_tickers:
        df = yf.download(ticker, start=start_date, end=end_date)
        if df.empty:
            st.warning(f"{ticker} iÃ§in veri alÄ±namadÄ±.")
        else:
            fig.add_trace(go.Scatter(x=df.index, y=df["Close"], mode="lines", name=ticker))
    
    if fig.data:
        fig.update_layout(
            title="SeÃ§ilen Hisselerin KapanÄ±ÅŸ FiyatlarÄ±",
            xaxis_title="Tarih",
            yaxis_title="Fiyat",
            height=500
        )
        st.plotly_chart(fig, use_container_width=True)
    else:
        st.error("HiÃ§bir hisse iÃ§in geÃ§erli veri alÄ±namadÄ±.")
